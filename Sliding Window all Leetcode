Sliding Window all questions :


Substrings of Size Three with Distinct Characters
Easy


class Solution {
public:
    int countGoodSubstrings(string s) {
       if(s.size()<3)return 0;
        char a=s[0],b=s[1],c=s[2];
        int res=0;
        for(int i=3;i<=s.size()-1;i++)
        {
            if(a!=b and b!=c and c!=a)res++;
            a=b;
            b=c;
            c=s[i];
        }
        if(a!=b and b!=c and c!=a)res++;
        return res;
    }
};

Longest Nice Substring


if (s.size() < 2) return "";
        unordered_set<char> ck(begin(s), end(s));
        for (int i = 0; i < s.size(); i++) {
            if (ck.find((char) toupper(s[i])) == end(ck) or ck.find((char) tolower(s[i])) == end(ck)) {
                string s1 = longestNiceSubstring(s.substr(0, i));
                string s2 = longestNiceSubstring(s.substr(i + 1));
                return s1.size() >= s2.size() ? s1 : s2;
            }
        }
        return s;
        }
        
        
        Diet Plan Performance
        
        
        class Solution {
public:
    int dietPlanPerformance(vector<int>& c, int k, int lower, int upper) {
        int count = 0, sum = 0, res = 0;
        
        for(int i = 0; i < c.size(); i++){
            sum += c[i];
            count++;
            if(count == k){
                if(sum > upper) res++;
                else if(sum < lower) res--;
                count--;
                sum = sum - c[i-k+1];
            }
        }
        return res;
    }
};
